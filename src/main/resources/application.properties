spring.application.name=Auth_Service
server.port=8080

# Datasource
spring.datasource.url=jdbc:postgresql://auth-postgres:5432/postgres
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
logging.level.org.hibernate.orm.connections.pooling=WARN

# JPA / Hibernate
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.open-in-view=false
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

spring.data.redis.host=auth-redis
spring.data.redis.port=6379

# JWT
jwt.secret=${JWT_SECRET}
jwt.expiration.ms=900000
refresh.token.expiration.days=7

# Gateway
gateway.secret=${GATEWAY_SECRET}

# SMTP
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${SPRING_MAIL_USERNAME}
spring.mail.password=${SPRING_MAIL_PASSWORD}
spring.mail.protocol=smtp
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.trust=smtp.gmail.com
spring.mail.properties.mail.smtp.connectiontimeout=30000
spring.mail.properties.mail.smtp.timeout=30000
spring.mail.properties.mail.smtp.writetimeout=30000

# OTP settings
otp.expires.in.seconds=600

# ========================================
# Actuator & Observability Configuration
# ========================================

# Expose tous les endpoints Actuator (pour dev/test)
management.endpoints.web.exposure.include=*

# Port dédié pour les métriques (optionnel, sinon utilise le même port)
management.server.port=8080

# Activer les métriques détaillées
management.metrics.enable.all=true
management.prometheus.metrics.export.enabled=true

# Activer les histogrammes pour les percentiles (p95, p99)
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.percentiles.http.server.requests=0.5,0.95,0.99
management.metrics.distribution.slo.http.server.requests=10ms,50ms,100ms,200ms,500ms,1s,2s

# Health check détaillé
management.endpoint.health.show-details=always
management.health.defaults.enabled=true

# Tags custom pour identifier le service dans Prometheus
management.metrics.tags.application=${spring.application.name}
management.metrics.tags.environment=local

services:

  # ============================================
  # üîê AUTH SERVICE
  # ============================================

  auth-service:
    build: .
    container_name: auth-service
    depends_on:
      auth-postgres:
        condition: service_healthy
      auth-redis:
        condition: service_healthy
    expose:
      - "8080"
    environment:
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      SPRING_MAIL_USERNAME: ${SPRING_MAIL_USERNAME}
      SPRING_MAIL_PASSWORD: ${SPRING_MAIL_PASSWORD}
    restart: always
    networks:
      - brokerx-network

  auth-postgres:
    image: postgres:17
    container_name: auth-postgres
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      POSTGRES_DB: postgres
    expose:
      - "5432"
    volumes:
      - auth_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - brokerx-network

  auth-redis:
    image: redis:7.4
    container_name: auth-redis
    restart: always
    expose:
      - "6379"
    command: [
      "redis-server",
      "--save", "",
      "--appendonly", "no"
    ]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - brokerx-network


# ============================================
# üåê NETWORKS
# ============================================

networks:
  brokerx-network:
    external: true
    name: brokerx-network

# ============================================
# üíæ VOLUMES
# ============================================

volumes:
  auth_postgres_data:
    name: auth_postgres_data